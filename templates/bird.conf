# {{ file }}
# This file was automatically generated by l3overlayd.

log syslog all;

router id {{ gretaps[0].local.address }};

filter ce_out
{
    bgp_community.add((24226, 900));
    accept;
}

filter ce_in
{
    if (24226, 900) ~ bgp_community then
        reject;

    accept;
}

protocol device
{
}

protocol kernel
{
    export all;
}

protocol direct
{
{% if vlans|length > 0 %}

    # Static VLANs
{% for vlan in vlans %}
    interface "{{ vlan.interface }}";
{% endfor %}
{% endif %}
{% if tunnels|length > 0 %}

    # Static tunnels
{% for tunnel in tunnels %}
    interface "{{ tunnel.interface }}";
{% endfor %}
{% endif %}
{% if veths|length > 0 %}

    # Static veths
{% for veth in veths %}
    interface "{{ veth.interface }}";
{% endfor %}
{% endif %}

}

protocol bfd
{
}

# Mesh tunnels
{% for gretap in gretaps %}
protocol bgp {{ gretap.interface }}
{

    description "{{ gretap.local.name }} -> {{ gretap.remote.name }}";

    import all;
    export all;

    direct;
    ttl security;
    next hop self;

    bfd;

    local {{ gretap.local.address }} as {{ asn }};
    neighbor {{ gretap.remote.address }} as {{ asn }};

}

{% endfor %}

{% if bgps|length > 0 %}

# Static BGPs
{% for bgp in bgps %}
protocol bgp '{{ bgp.name }}'
{

{% if bgp.description %}
    description "{{ bgp.description }}";
{% endif %}

{% if bgp.import_prefixes %}
    import where net ~ [ {{ bgp.import_prefixes|join(', ') }} ];
{% else %}
    import all;
{% endif %}
    export all;

    direct;
    ttl security;
    next hop self;

    bfd;

    local {% if bgp.local %}{{ bgp.local }} {% endif %}as {{ bgp.local_asn }};
    neighbor {{ bgp.neighbor }} as {{ bgp.neighbor_asn }};

}

{% endfor %}
{% endif %}
