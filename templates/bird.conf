# {{ file }}
# This file was automatically generated by l3overlayd.

log syslog all;

router id {{ gretaps[0].local.address }};

protocol device
{
}

protocol kernel
{
    export all;
}

protocol direct
{
{% if vlans|length > 0 %}

    # Static VLANs
{% for vlan in vlans %}
    interface "{{ vlan.interface }}";
{% endfor %}
{% endif %}
{% if tunnels|length > 0 %}

    # Static tunnels
{% for tunnel in tunnels %}
    interface "{{ tunnel.interface }}";
{% endfor %}
{% endif %}
{% if tuntaps|length > 0 %}

    # Static tunnels
{% for tuntap in tuntaps %}
    interface "{{ tuntap.interface }}";
{% endfor %}
{% endif %}
{% if veths|length > 0 %}

    # Static veths
{% for veth in veths %}
    interface "{{ veth.inner_interface }}";
{% endfor %}
{% endif %}
{% if overlay_links|length > 0 %}

    # Static overlay links
{% for overlay_link in overlay_links %}
{% if overlay == overlay_link.outer_overlay %}
    interface "{{ veth.bridge.interface }}";
{% else %}
    interface "{{ veth.inner.interface }}";
{% endif %}
{% endfor %}
{% endif %}

}

protocol bfd
{
}

# Mesh tunnels
{% for mesh_tunnel in mesh_tunnels %}
protocol bgp {{ mesh_tunnel.interface }}
{

    import all;
    export all;

    direct;
    ttl security;
    next hop self;

    bfd;

    local {{ mesh_tunnel.local.address }} as {{ asn }};
    neighbor {{ mesh_tunnel.remote.address }} as {{ asn }};

    description "{{ mesh_tunnel.local.name }} -> {{ mesh_tunnel.remote.name }}";

}

{% endfor %}

{% if overlay_links|length > 0 %}
# Static overlay links
{% for overlay_link in overlay_links %}
protocol bgp '{{ overlay_link.name }}'
{

    import all;
    export all;

    direct;
    ttl security;
    next hop self;

    bfd;

{% if overlay == overlay_link.outer_overlay %}
    local {{ overlay_link.bridge.address }} as {{ asn }};
    neighbor {{ overlay_link.inner.address }} as {{ asn }};
    description "{{ overlay }} -> {{ overlay_link.inner_overlay }}";
{% else %}
    local {{ overlay_link.inner.address }} as {{ asn }};
    neighbor {{ overlay_link.bridge.address }} as {{ asn }};
    description "{{ overlay }} -> {{ overlay_link.outer_overlay }}";
{% endif %}

}

{% endfor %}
{% endif %}

{% if bgps|length > 0 %}
{% for bgp in bgps %}
protocol bgp '{{ bgp.name }}'
{

    direct;
    ttl security;
    next hop self;

    bfd;

    local {% if bgp.local %}{{ bgp.local }} {% endif %}as {{ bgp.local_asn }};
    neighbor {{ bgp.neighbor }} as {{ bgp.neighbor_asn }};

{% if bgp.description %}
    description "{{ bgp.description }}";
{% endif %}

    import filter {
{% if bgp.import_prefixes %}

        if net ~ [ {{ bgp.import_prefixes|join(', ') }} ] then
            reject;
{% endif %}

        if (24226, 900) ~ bgp_community then
            reject;

        accept;

    };

    export filter {

        bgp_community.add((24226, 900));
        accept;

    };

}

{% endfor %}
{% endif %}
